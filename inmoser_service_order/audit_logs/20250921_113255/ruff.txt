F401 `.controllers` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> __init__.py:3:15
  |
1 | # -*- coding: utf-8 -*-
2 |
3 | from . import controllers, models, wizards
  |               ^^^^^^^^^^^
  |
help: Use an explicit re-export: `controllers as controllers`

F401 `.models` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> __init__.py:3:28
  |
1 | # -*- coding: utf-8 -*-
2 |
3 | from . import controllers, models, wizards
  |                            ^^^^^^
  |
help: Use an explicit re-export: `models as models`

F401 `.wizards` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> __init__.py:3:36
  |
1 | # -*- coding: utf-8 -*-
2 |
3 | from . import controllers, models, wizards
  |                                    ^^^^^^^
  |
help: Use an explicit re-export: `wizards as wizards`

invalid-syntax: Simple statements must be separated by newlines or semicolons
 --> __manifest__.py:1:2
  |
1 | k{
  |  ^
2 |     "name": "Inmoser Service Order Management",
3 |     "version": "17.0.1.0.0",
  |

F401 `.client_portal` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> controllers/__init__.py:2:15
  |
1 | # -*- coding: utf-8 -*-
2 | from . import client_portal, public_portal
  |               ^^^^^^^^^^^^^
  |
help: Use an explicit re-export: `client_portal as client_portal`

F401 `.public_portal` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> controllers/__init__.py:2:30
  |
1 | # -*- coding: utf-8 -*-
2 | from . import client_portal, public_portal
  |                              ^^^^^^^^^^^^^
  |
help: Use an explicit re-export: `public_portal as public_portal`

F401 `.account_integration` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> models/__init__.py:4:5
  |
3 | from . import (
4 |     account_integration,
  |     ^^^^^^^^^^^^^^^^^^^
5 |     hr_employee_extension,
6 |     hr_integration,
  |
help: Use an explicit re-export: `account_integration as account_integration`

F401 `.hr_employee_extension` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> models/__init__.py:5:5
  |
3 | from . import (
4 |     account_integration,
5 |     hr_employee_extension,
  |     ^^^^^^^^^^^^^^^^^^^^^
6 |     hr_integration,
7 |     qr_code_generator,
  |
help: Use an explicit re-export: `hr_employee_extension as hr_employee_extension`

F401 `.hr_integration` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> models/__init__.py:6:5
  |
4 |     account_integration,
5 |     hr_employee_extension,
6 |     hr_integration,
  |     ^^^^^^^^^^^^^^
7 |     qr_code_generator,
8 |     res_partner_extension,
  |
help: Use an explicit re-export: `hr_integration as hr_integration`

F401 `.qr_code_generator` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> models/__init__.py:7:5
  |
5 |     hr_employee_extension,
6 |     hr_integration,
7 |     qr_code_generator,
  |     ^^^^^^^^^^^^^^^^^
8 |     res_partner_extension,
9 |     service_equipment,
  |
help: Use an explicit re-export: `qr_code_generator as qr_code_generator`

F401 `.res_partner_extension` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
  --> models/__init__.py:8:5
   |
 6 |     hr_integration,
 7 |     qr_code_generator,
 8 |     res_partner_extension,
   |     ^^^^^^^^^^^^^^^^^^^^^
 9 |     service_equipment,
10 |     service_order,
   |
help: Use an explicit re-export: `res_partner_extension as res_partner_extension`

F401 `.service_equipment` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
  --> models/__init__.py:9:5
   |
 7 |     qr_code_generator,
 8 |     res_partner_extension,
 9 |     service_equipment,
   |     ^^^^^^^^^^^^^^^^^
10 |     service_order,
11 |     service_order_business_logic,
   |
help: Use an explicit re-export: `service_equipment as service_equipment`

F401 `.service_order` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
  --> models/__init__.py:10:5
   |
 8 |     res_partner_extension,
 9 |     service_equipment,
10 |     service_order,
   |     ^^^^^^^^^^^^^
11 |     service_order_business_logic,
12 |     service_order_refaction_line,
   |
help: Use an explicit re-export: `service_order as service_order`

F401 `.service_order_business_logic` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
  --> models/__init__.py:11:5
   |
 9 |     service_equipment,
10 |     service_order,
11 |     service_order_business_logic,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
12 |     service_order_refaction_line,
13 |     service_type,
   |
help: Use an explicit re-export: `service_order_business_logic as service_order_business_logic`

F401 `.service_order_refaction_line` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
  --> models/__init__.py:12:5
   |
10 |     service_order,
11 |     service_order_business_logic,
12 |     service_order_refaction_line,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
13 |     service_type,
14 |     stock_integration,
   |
help: Use an explicit re-export: `service_order_refaction_line as service_order_refaction_line`

F401 `.service_type` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
  --> models/__init__.py:13:5
   |
11 |     service_order_business_logic,
12 |     service_order_refaction_line,
13 |     service_type,
   |     ^^^^^^^^^^^^
14 |     stock_integration,
15 | )
   |
help: Use an explicit re-export: `service_type as service_type`

F401 `.stock_integration` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
  --> models/__init__.py:14:5
   |
12 |     service_order_refaction_line,
13 |     service_type,
14 |     stock_integration,
   |     ^^^^^^^^^^^^^^^^^
15 | )
   |
help: Use an explicit re-export: `stock_integration as stock_integration`

F841 Local variable `estimated_end` is assigned to but never used
   --> models/service_order.py:313:17
    |
311 |             # Estimar fecha de finalización
312 |             if self.scheduled_date and self.service_type_id.estimated_duration:
313 |                 estimated_end = self.scheduled_date + timedelta(
    |                 ^^^^^^^^^^^^^
314 |                     hours=self.service_type_id.estimated_duration
315 |                 )
    |
help: Remove assignment to unused variable `estimated_end`

F401 `.test_integrations` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> tests/__init__.py:4:5
  |
3 | from . import (
4 |     test_integrations,
  |     ^^^^^^^^^^^^^^^^^
5 |     test_service_equipment,
6 |     test_service_order,
  |
help: Use an explicit re-export: `test_integrations as test_integrations`

F401 `.test_service_equipment` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> tests/__init__.py:5:5
  |
3 | from . import (
4 |     test_integrations,
5 |     test_service_equipment,
  |     ^^^^^^^^^^^^^^^^^^^^^^
6 |     test_service_order,
7 |     test_service_workflows,
  |
help: Use an explicit re-export: `test_service_equipment as test_service_equipment`

F401 `.test_service_order` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> tests/__init__.py:6:5
  |
4 |     test_integrations,
5 |     test_service_equipment,
6 |     test_service_order,
  |     ^^^^^^^^^^^^^^^^^^
7 |     test_service_workflows,
8 | )
  |
help: Use an explicit re-export: `test_service_order as test_service_order`

F401 `.test_service_workflows` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> tests/__init__.py:7:5
  |
5 |     test_service_equipment,
6 |     test_service_order,
7 |     test_service_workflows,
  |     ^^^^^^^^^^^^^^^^^^^^^^
8 | )
  |
help: Use an explicit re-export: `test_service_workflows as test_service_workflows`

F841 Local variable `action` is assigned to but never used
  --> tests/test_integrations.py:77:9
   |
76 |         # Crear factura
77 |         action = service_order.action_create_invoice()
   |         ^^^^^^
78 |
79 |         # Verificar que se creó la factura
   |
help: Remove assignment to unused variable `action`

F841 Local variable `action` is assigned to but never used
   --> tests/test_integrations.py:101:9
    |
100 |         # Crear asiento contable
101 |         action = service_order.action_create_journal_entry()
    |         ^^^^^^
102 |
103 |         # Verificar que se creó el asiento
    |
help: Remove assignment to unused variable `action`

F841 Local variable `action` is assigned to but never used
   --> tests/test_integrations.py:215:9
    |
214 |         # Crear entrega
215 |         action = service_order.action_create_delivery()
    |         ^^^^^^
216 |
217 |         # Verificar que se creó el picking
    |
help: Remove assignment to unused variable `action`

F841 Local variable `action` is assigned to but never used
   --> tests/test_integrations.py:341:9
    |
340 |         # Iniciar timesheet
341 |         action = service_order.action_start_timesheet()
    |         ^^^^^^
342 |
343 |         # Verificar que se creó el timesheet
    |
help: Remove assignment to unused variable `action`

F841 Local variable `action` is assigned to but never used
   --> tests/test_integrations.py:376:9
    |
375 |         # Detener timesheet
376 |         action = service_order.action_stop_timesheet()
    |         ^^^^^^
377 |
378 |         # Verificar que se detuvo
    |
help: Remove assignment to unused variable `action`

F841 Local variable `equipment1` is assigned to but never used
   --> tests/test_service_equipment.py:161:9
    |
159 |         """Test validaciones del equipo"""
160 |         # Test serial number único
161 |         equipment1 = self.env["inmoser.service.equipment"].create(
    |         ^^^^^^^^^^
162 |             {
163 |                 "name": "Validation Test 1",
    |
help: Remove assignment to unused variable `equipment1`

F841 Local variable `new_date` is assigned to but never used
   --> tests/test_service_order.py:412:9
    |
411 |         # Reagendar
412 |         new_date = datetime.now() + timedelta(days=2)
    |         ^^^^^^^^
413 |         service_order.action_reschedule()
    |
help: Remove assignment to unused variable `new_date`

F841 Local variable `original_date` is assigned to but never used
   --> tests/test_service_workflows.py:160:9
    |
158 |         )
159 |
160 |         original_date = service_order.scheduled_date
    |         ^^^^^^^^^^^^^
161 |
162 |         # Reagendar
    |
help: Remove assignment to unused variable `original_date`

F841 Local variable `activities` is assigned to but never used
   --> tests/test_service_workflows.py:308:9
    |
307 |         # Verificar que se crearon actividades
308 |         activities = service_order.activity_ids
    |         ^^^^^^^^^^
309 |         # Las actividades pueden o no crearse dependiendo de la configuración
310 |         # Este test verifica que no hay errores en el proceso
    |
help: Remove assignment to unused variable `activities`

F841 Local variable `service_order1` is assigned to but never used
   --> tests/test_service_workflows.py:401:9
    |
400 |         # Crear primera orden
401 |         service_order1 = self.env["inmoser.service.order"].create(
    |         ^^^^^^^^^^^^^^
402 |             {
403 |                 "partner_id": self.partner.id,
    |
help: Remove assignment to unused variable `service_order1`

F841 Local variable `service_order2` is assigned to but never used
   --> tests/test_service_workflows.py:413:9
    |
412 |         # Intentar crear segunda orden en la misma fecha/hora
413 |         service_order2 = self.env["inmoser.service.order"].create(
    |         ^^^^^^^^^^^^^^
414 |             {
415 |                 "partner_id": self.partner.id,
    |
help: Remove assignment to unused variable `service_order2`

F401 `.service_complete_wizard` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> wizards/__init__.py:3:15
  |
1 | # -*- coding: utf-8 -*-
2 |
3 | from . import service_complete_wizard, service_reprogram_wizard
  |               ^^^^^^^^^^^^^^^^^^^^^^^
  |
help: Use an explicit re-export: `service_complete_wizard as service_complete_wizard`

F401 `.service_reprogram_wizard` imported but unused; consider removing, adding to `__all__`, or using a redundant alias
 --> wizards/__init__.py:3:40
  |
1 | # -*- coding: utf-8 -*-
2 |
3 | from . import service_complete_wizard, service_reprogram_wizard
  |                                        ^^^^^^^^^^^^^^^^^^^^^^^^
  |
help: Use an explicit re-export: `service_reprogram_wizard as service_reprogram_wizard`

E741 Ambiguous variable name: `l`
   --> wizards/service_complete_wizard.py:183:24
    |
181 |             # Buscar el producto en el inventario virtual
182 |             inventory_line = technician.x_inmoser_virtual_inventory_ids.filtered(
183 |                 lambda l: l.product_id == line.product_id
    |                        ^
184 |             )
    |

Found 36 errors.
No fixes available (12 hidden fixes can be enabled with the `--unsafe-fixes` option).
