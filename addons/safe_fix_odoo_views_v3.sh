#!/bin/bash
# safe_fix_odoo_views_v3.sh
# Repara XML malformado y field vac√≠os en Odoo 17
# Uso: ./safe_fix_odoo_views_v3.sh inmoser_service_order

set -euo pipefail

MODULE=${1:-""}
[[ -z "$MODULE" ]] && { echo "‚ùå Indica el m√≥dulo: ./safe_fix_odoo_views_v3.sh inmoser_service_order"; exit 1; }

BASE_DIR="$(pwd)"
MODULE_DIR="$BASE_DIR/$MODULE"
[[ ! -d "$MODULE_DIR" ]] && { echo "‚ùå M√≥dulo no encontrado: $MODULE_DIR"; exit 1; }

echo "üîß Reparando XML malformado en $MODULE_DIR ..."

find "$MODULE_DIR" -type f -iname "*.xml" | while read -r FILE; do
  echo "üìÑ Procesando $FILE"
  cp "$FILE" "${FILE}.bak"

  # 1Ô∏è‚É£  Eliminar contenido despu√©s de </odoo>
  sed -i '/^<\/odoo>/q' "$FILE"

  # 2Ô∏è‚É£  Cerrar <data> si est√° abierto
  if grep -q '<data>' "$FILE" && ! grep -q '</data>' "$FILE"; then
    echo '</data>' >> "$FILE"
  fi

  # 3Ô∏è‚É£  Cerrar <odoo> si est√° abierto
  if grep -q '<odoo>' "$FILE" && ! grep -q '</odoo>' "$FILE"; then
    echo '</odoo>' >> "$FILE"
  fi

  # 4Ô∏è‚É£  Convertir <field ... /> a <field ...></field>
  sed -i 's|<field \([^>]*\)/>|<field \1></field>|g' "$FILE"

  # 5Ô∏è‚É£  Convertir <record ... /> a <record ...></record>
  sed -i 's|<record \([^>]*\)/>|<record \1></record>|g' "$FILE"

  # 6Ô∏è‚É£  Intentar formatear con xmllint (si se puede)
  xmllint --format --output "$FILE.tmp" "$FILE" 2>/dev/null && mv "$FILE.tmp" "$FILE" || {
    echo "‚ö†Ô∏è  xmllint no pudo formatear $FILE (puede tener errores graves)"
  }
done

echo "‚úÖ Reparaciones finalizadas. Backups en .bak"
